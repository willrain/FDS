<?php

/**
 * @file
 * Telegram account module
 */

use Drupal\telegram\TelegramMessage;

/**
 * Implements hook_menu().
 */
function telegram_account_menu() {
  $items['user/%user/edit/telegram'] = array(
    'title' => 'Telegram',
    'page callback' => 'telegram_account_edit_page',
    'page arguments' => array(1),
    'access callback' => 'telegram_account_edit_access',
    'access arguments' => array(1),
    'file' => 'telegram_account.pages.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['user/%user/telegram'] = array(
    'title' => 'Telegram',
    'description' => 'Send Telegram message to user with Telegram',
    'page callback' => 'telegram_account_send_page',
    'page arguments' => array(1),
    'access callback' => 'telegram_account_send_access',
    'access arguments' => array(1),
    'file' => 'telegram_account.pages.inc',
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Access callback for the Telegram accounts page.
 *
 * @return
 *   Boolean TRUE if the current user has access.
 */
function telegram_account_edit_access($account) {
  global $user;

  return !empty($account->uid) && user_access('receive telegram notifications', $account) &&
    (user_edit_access($account) || user_access('manage telegram contacts'));
}

/**
 * Access callback for the Telegram accounts page.
 *
 * @return
 *   Boolean TRUE if the current user has access.
 */
function telegram_account_send_access($account) {
  return !empty($account->uid) && user_access('receive telegram notifications', $account)
    && !empty($account->telegram) && !empty($account->telegram->verified) &&
     user_access('send telegram messages to users');
}

/**
 * Implements hook_permission().
 */
function telegram_account_permission() {
  return array(
    'receive telegram notifications' =>  array(
      'title' => t('Receive Telegram notifications'),
    ),
    'send telegram messages to users' =>  array(
      'title' => t('Receive Telegram notifications'),
    ),
  );
}

/**
 * Implements hook_user_load().
 */
function telegram_account_user_load($users) {
  $contacts = telegram_manager()->getContacts(array('uid' => array_keys($users)));
  foreach ($contacts as $contact) {
    $users[$contact->uid]->telegram = $contact;
  }
}

/**
 * Implements hook_user_view() {
 */
function telegram_account_user_view($account, $view_mode, $langcode) {

}

/**
 * Get contact for user account only if its a verified contact.
 *
 * @param object $account
 *   User account, or none for current user.
 *
 * @return TelegramContact|NULL
 */
function telegram_account_get_contact($account = NULL) {
  $account = $account ? $account : $GLOBALS['user'];
  return !empty($account->telegram) && !empty($account->telegram->verified) ? $account->telegram : NULL;
}

/**
 * Create new contact from user account.
 *
 * @param object $account
 *   User account to create contact for.
 * @param string $phone
 *   Phone number
 *
 * @return TelegramContact
 */
function telegram_account_create_contact($account, $phone) {
  $telegram = telegram_manager();
  // @todo find better default name
  $first_name = 'Drupal';
  $last_name = 'User' . $account->uid;

  // Check for existing contact first.
  $contact = $telegram->getContactByPhone($phone);
  if ($contact) {
    // Assign contact to new user.
    $contact->uid = $account->uid;
    drupal_set_message(t('Assigning existing Telegram contact to user.'));
  }
  if (!$contact) {
    $contact = $telegram->contactCreate(array(
      'phone' => $phone,
      'first_name' => $first_name,
      'last_name' => $last_name,
      'uid' => $account->uid,
    ));
  }
  // At this point we have a contact oid, and it may be scheduled on telegram for creation.
  $telegram->saveContact($contact);

  return $contact;
}

/**
 * Send verification message for telegram account.
 */
function telegram_account_send_verification($contact) {
    $telegram = telegram_manager();

    $contact->verified = 0;
    $contact->verification = (string)mt_rand(100000, 999999);
    $telegram->saveContact($contact);

    $text = t('Your @site-name verification code is: @code', array(
      '@site-name' => variable_get('site_name'),
      '@code' => $contact->verification,
    ));
    $message = new TelegramMessage(array('text' => $text));
    $message->setDestination($contact);

    // Should we send this one without queueing?
    return $telegram->queueMessage($message);
}

/**
 * Verify contact with code.
 */
function telegram_account_verify_contact($contact, $code) {
  if ($contact->verification === $code) {
    $contact->verified = 1;
    telegram_manager()->saveContact($contact);
    return TRUE;
  }
  else {
    return FALSE;
  }
}
